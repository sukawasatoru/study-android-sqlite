buildscript {
    dependencies {
        classpath 'com.google.android.gms:oss-licenses-plugin:0.10.6'
    }
}

plugins {
    alias libs.plugins.android.application apply false
    alias libs.plugins.android.library apply false
    alias libs.plugins.android.test apply false
    alias libs.plugins.apollo apply false
    alias libs.plugins.spotless apply false
    alias libs.plugins.protobuf apply false
    alias libs.plugins.hilt apply false
    alias libs.plugins.kotlin.android apply false
    alias libs.plugins.kotlin.serialization apply false
}

def setupAndroidPlugin = { Project project ->
    project.repositories {
        google()
        mavenCentral()

        maven {
            url 'https://maven.pkg.github.com/sukawasatoru/android-logger'
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }

    project.android {
        compileSdk 33
        buildToolsVersion '33.0.2'

        defaultConfig {
            minSdk 24
            targetSdk 33
        }

        compileOptions {
            coreLibraryDesugaringEnabled true
            sourceCompatibility JavaVersion.VERSION_11
            targetCompatibility JavaVersion.VERSION_11
        }

        signingConfigs {
            config {
                enableV3Signing true
                enableV4Signing true
            }
        }
    }

    project.dependencies {
        coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.2.2'
    }
}

def setupKotlinAndroidPlugin = { Project project ->
    project.android {
        sourceSets.each {
            it.java.srcDirs += "src/${it.name}/kotlin"
        }

        kotlinOptions {
            freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'
            jvmTarget = JavaVersion.VERSION_11
        }
    }
}

def setupSpotlessPlugin = { Project project ->
    project.spotless {
        kotlin {
            target project.fileTree(dir: 'src', include: '**/*.kt', exclude: ['test/**/*.kt', 'androidTest/**/*.kt'])
            ktlint('0.48.2').userData([
                android          : 'true',
                'max-line-length': '120',
            ])
        }
    }
}

subprojects {
    plugins.whenPluginAdded {
        switch (it.class.name) {
            case 'com.android.build.gradle.AppPlugin':
                // fallthrough.
            case 'com.android.build.gradle.LibraryPlugin':
                // fallthrough.
            case 'com.android.build.gradle.TestPlugin':
                setupAndroidPlugin(project)
                break
            case 'org.jetbrains.kotlin.gradle.plugin.KotlinAndroidPluginWrapper':
                setupKotlinAndroidPlugin(project)
                break
            case 'com.diffplug.gradle.spotless.SpotlessPlugin':
                setupSpotlessPlugin(project)
                break
            default:
                break
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
